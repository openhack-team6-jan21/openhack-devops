#defaults:
  #run:
   # working-directory: apis/poi/web
on: 
  push:
    branches: [master]

name: Registry_Push_And_Deploy_DotNet

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # checkout the repo
    - name: 'Checkout Github Action'
      uses: actions/checkout@master

   # - uses: azure/docker-login@v1
    #  with:
     #   login-server: openhackgrb2e289acr.azurecr.io        
      #  username: ${{ secrets.REGISTRY_USERNAME }}
        #password: ${{ secrets.REGISTRY_PASSWORD }}

    #- run: |
        #docker build . -t openhackgrb2e289acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }}
       # docker push openhackgrb2e289acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }} 

   # - uses: azure/webapps-deploy@v2
    #  with:
     #  app-name: 'openhackgrb2e289poi'
      # slot-name: 'staging'
       #publish-profile: ${{ secrets.azureWebAppPublishProfile }}
       #images: 'openhackgrb2e289acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }}'
       
    - name: Azure Login
      uses: Azure/login@v1
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        creds: 
        # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          ${{ secrets.AZURE_CREDENTIALS }}
    - name: Health-check staging
      working-directory: ./scripts
      run: healthcheck.sh    
       
   # - name: Azure CLI Action
    #  uses: Azure/cli@1.0.4
     # with:
        # Specify the script here
      #  inlineScript: 
       #   'az webapp deployment slot swap  -g openhackgrb2e289rg -n openhackgrb2e289poi --slot staging --target-slot production'
        # Azure CLI version to be used to execute the script. If not provided, latest version is used 

